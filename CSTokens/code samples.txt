namespace compiler
{
    class swapper
    {
        public static void swap(ref int first, ref int second)
        {
            first += second;
            second = first - second;
            first -= second;
            Console.WriteLine(first);
            Console.WriteLine(second);
            return;
        }
        static void Main()
        {
            int number1 = 3, number2 = 5;
            swap(ref number1, ref number2);
            for (int i = 0; i < number2; i++)
            {
                if (i == number1)
                    break;
                else
                    continue;
            }
            Console.WriteLine(number1);
            Console.WriteLine(number2);
            return;
        }
    }
}
=====================================================================================================================================
namespace compiler
{
    class swapper
    {
        static void Main()
        {
            int i = 1;
            bool b = true;
            if (i >= 1)
            {
                if (b)
                {
                    if (i < 3)
                        goto END;
                    else
                        goto FINISH;
                }
            }
            else
            {
                switch (i)
                {
                    case 1:
                        b = false;
                        break;
                    default:
                        if (i < 2)
                            break;
                }
            }
            END:
                return;
            FINISH:
                return;
        }
    }
}
=====================================================================================================================================
interface IPoint
{
    int x
    {
        get;
        set;
    }

    int y
    {
        get;
        set;
    }
}
interface ISampleInterface
{
    void SampleMethod();
}

class Point : IPoint, ISampleInterface
{
    private int _x;
    private int _y;

    public Point(int x, int y)
    {
        _x = x;
        _y = y;
    }
    public int x
    {
        get
        {
            return _x;
        }

        set
        {
            _x = value;
        }
    }

    public int y
    {
        get
        {
            return _y;
        }
        set
        {
            _y = value;
        }
    }
    void ISampleInterface.SampleMethod()
    {
        ISampleInterface obj = new ImplementationClass();

        obj.SampleMethod();
    }
}
=====================================================================================================================================
public class EnumTest
{
    enum Days { Sun, Mon, Tue, Wed, Thu, Fri, Sat };

    enum Range : long { Max = 2147483648, Min = 255 };

    
    
    static void Main()
    {
        int x = (int)Days.Sun;
        int y = (int)Days.Fri;
        Console.WriteLine("Sun = {0}", x);
        Console.WriteLine("Fri = {0}", y);
    }
}
=====================================================================================================================================
namespace compiler
{
    class swapper
    {
        static void Main()
        {
            string s = "my \\name is: \n Mustafa\tAl-D\bBaghdadi\\";
        }
    }
}
=====================================================================================================================================
errors 
============
namespace compiler
{
    class !@@#@#!@#
    {
        static void Main()
        {
		  const int x=10;
            switch (i)
                {
                    case :
                        b = false;
                        break;
                    default:
                        if (i < 2)
                            break;
                }
            return;
        }
    }
}
//==============
namespace compiler
{
    class  123
    {
	const x=10;
        static void Main()
        {
            string s = "\\n\n123\nmy name is mustafa";
            return;
        }
    }
}
//===============
namespace compiler
{
    class 
    {
        static void Main()
        {
			if ()
            y=0;
            return;
        }
    }
}
//===============
namespace compiler
{
    class  omar
    {
		const x;
        static void Main()
        {
            string 9s = ;
            return;
        }
    }
}
//===============
namespace compiler
{
	struct 57657{}
    class  omar
    {
        static void Main()
        {
			for ()
			{
            if(x>0)
			print();
			}
			do {
			};

			int u= new [10]() ;

            return;
        }
    }
}
//===============
